{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Data-Pipeline01"
		},
		"Linkservicedatalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Linkservicedatalake'"
		},
		"Linkservicedatalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagedatalakepractice.dfs.core.windows.net/"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://movies-ratings2.p.rapidapi.com/ratings?id=tt0111161"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Linkservicedatalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Linkservicedatalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Linkservicedatalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "mastercard",
						"folderPath": "csvfile",
						"fileSystem": "reporting"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sale_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Fact_Sales_1.csv",
						"folderPath": "csvfiles",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sale_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csvfile",
						"fileSystem": "destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/api_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "apidata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_flow_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Fact_Sales_1.csv",
						"folderPath": "csvfile",
						"fileSystem": "reporting"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_lake_param_container_level')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_lake_param_file_level')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container_name": {
						"type": "string"
					},
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csvfile",
						"fileSystem": "destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/param_source_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_fille_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_fille_name",
							"type": "Expression"
						},
						"folderPath": "csvfile",
						"fileSystem": "destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "transaction_id",
						"type": "String"
					},
					{
						"name": "transactional_date",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "payment",
						"type": "String"
					},
					{
						"name": "credit_card",
						"type": "String"
					},
					{
						"name": "loyalty_card",
						"type": "String"
					},
					{
						"name": "cost",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinkoutput_visa')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dataflowoutput_visa",
						"folderPath": "csvfile",
						"fileSystem": "reporting"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/target_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linkservicedatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": "csvfile",
						"fileSystem": "reporting"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_api_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"x-rapidapi-key": "429ad88546mshb8f930b23d3a5f9p120a63jsna67c407ed2f3",
									"x-rapidapi-host": "movies-ratings2.p.rapidapi.com"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['tmdbId']"
										},
										"sink": {
											"name": "tmdbId"
										}
									},
									{
										"source": {
											"path": "$['imdbId']"
										},
										"sink": {
											"name": "imdbId"
										}
									},
									{
										"source": {
											"path": "$['lastUpdated']"
										},
										"sink": {
											"name": "lastUpdated"
										}
									},
									{
										"source": {
											"path": "$['ratings']['imdb']['score']"
										},
										"sink": {
											"name": "ratings_imdb_score"
										}
									},
									{
										"source": {
											"path": "$['ratings']['imdb']['reviewsCount']"
										},
										"sink": {
											"name": "reviewsCount"
										}
									},
									{
										"source": {
											"path": "$['ratings']['imdb']['url']"
										},
										"sink": {
											"name": "ratings_imdb_url"
										}
									},
									{
										"source": {
											"path": "$['ratings']['metacritic']['metascore']"
										},
										"sink": {
											"name": "metascore"
										}
									},
									{
										"source": {
											"path": "$['ratings']['metacritic']['userScore']"
										},
										"sink": {
											"name": "userScore"
										}
									},
									{
										"source": {
											"path": "$['ratings']['metacritic']['averageScore']"
										},
										"sink": {
											"name": "ratings_metacritic_averageScore"
										}
									},
									{
										"source": {
											"path": "$['ratings']['metacritic']['url']"
										},
										"sink": {
											"name": "ratings_metacritic_url"
										}
									},
									{
										"source": {
											"path": "$['ratings']['rotten_tomatoes']['tomatometer']"
										},
										"sink": {
											"name": "tomatometer"
										}
									},
									{
										"source": {
											"path": "$['ratings']['rotten_tomatoes']['tomatometerReviewsCount']"
										},
										"sink": {
											"name": "tomatometerReviewsCount"
										}
									},
									{
										"source": {
											"path": "$['ratings']['rotten_tomatoes']['audienceScore']"
										},
										"sink": {
											"name": "audienceScore"
										}
									},
									{
										"source": {
											"path": "$['ratings']['rotten_tomatoes']['audienceScoreReviewsCount']"
										},
										"sink": {
											"name": "audienceScoreReviewsCount"
										}
									},
									{
										"source": {
											"path": "$['ratings']['rotten_tomatoes']['averageScore']"
										},
										"sink": {
											"name": "ratings_rotten_tomatoes_averageScore"
										}
									},
									{
										"source": {
											"path": "$['ratings']['rotten_tomatoes']['url']"
										},
										"sink": {
											"name": "ratings_rotten_tomatoes_url"
										}
									},
									{
										"source": {
											"path": "$['ratings']['letterboxd']['score']"
										},
										"sink": {
											"name": "ratings_letterboxd_score"
										}
									},
									{
										"source": {
											"path": "$['ratings']['letterboxd']['url']"
										},
										"sink": {
											"name": "ratings_letterboxd_url"
										}
									},
									{
										"source": {
											"path": "$['ratings']['allocine']"
										},
										"sink": {
											"name": "allocine",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ratings']['average']['score']"
										},
										"sink": {
											"name": "ratings_average_score"
										}
									},
									{
										"source": {
											"path": "$['media']['backdrop_path']"
										},
										"sink": {
											"name": "backdrop_path"
										}
									},
									{
										"source": {
											"path": "$['media']['budget']"
										},
										"sink": {
											"name": "budget"
										}
									},
									{
										"source": {
											"path": "$['media']['homepage']"
										},
										"sink": {
											"name": "homepage"
										}
									},
									{
										"source": {
											"path": "$['media']['id']"
										},
										"sink": {
											"name": "media_id"
										}
									},
									{
										"source": {
											"path": "$['media']['imdb_id']"
										},
										"sink": {
											"name": "media_imdb_id"
										}
									},
									{
										"source": {
											"path": "$['media']['original_language']"
										},
										"sink": {
											"name": "original_language"
										}
									},
									{
										"source": {
											"path": "$['media']['original_title']"
										},
										"sink": {
											"name": "original_title"
										}
									},
									{
										"source": {
											"path": "$['media']['overview']"
										},
										"sink": {
											"name": "overview"
										}
									},
									{
										"source": {
											"path": "$['media']['popularity']"
										},
										"sink": {
											"name": "popularity"
										}
									},
									{
										"source": {
											"path": "$['media']['poster_path']"
										},
										"sink": {
											"name": "poster_path"
										}
									},
									{
										"source": {
											"path": "$['media']['release_date']"
										},
										"sink": {
											"name": "release_date"
										}
									},
									{
										"source": {
											"path": "$['media']['revenue']"
										},
										"sink": {
											"name": "revenue"
										}
									},
									{
										"source": {
											"path": "$['media']['runtime']"
										},
										"sink": {
											"name": "runtime"
										}
									},
									{
										"source": {
											"path": "$['media']['status']"
										},
										"sink": {
											"name": "status"
										}
									},
									{
										"source": {
											"path": "$['media']['tagline']"
										},
										"sink": {
											"name": "tagline"
										}
									},
									{
										"source": {
											"path": "$['media']['title']"
										},
										"sink": {
											"name": "title"
										}
									},
									{
										"source": {
											"path": "$['media']['video']"
										},
										"sink": {
											"name": "video"
										}
									},
									{
										"source": {
											"path": "$['media']['external_ids']['imdb_id']"
										},
										"sink": {
											"name": "media_external_ids_imdb_id"
										}
									},
									{
										"source": {
											"path": "$['media']['external_ids']['wikidata_id']"
										},
										"sink": {
											"name": "wikidata_id"
										}
									},
									{
										"source": {
											"path": "$['media']['external_ids']['facebook_id']"
										},
										"sink": {
											"name": "facebook_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['media']['external_ids']['instagram_id']"
										},
										"sink": {
											"name": "instagram_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['media']['external_ids']['twitter_id']"
										},
										"sink": {
											"name": "twitter_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['media']['director']"
										},
										"sink": {
											"name": "director",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "api_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/api_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourcesinkMatch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata_source",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "data_lake_param_container_level",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "adfrealtimestorage"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata_sink",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "data_lake_param_container_level",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "adfrealtimestoragedestination"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_source",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Metadata_sink",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_source').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@not(contains(activity('Get Metadata_sink').output.childItems,item()))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": null,
												"modifiedDatetimeEnd": null,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "data_lake_param_file_level",
											"type": "DatasetReference",
											"parameters": {
												"p_container_name": "adfrealtimestorage",
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "data_lake_param_container_level",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "adfrealtimestoragedestination"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/data_lake_param_container_level')]",
				"[concat(variables('factoryId'), '/datasets/data_lake_param_file_level')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_incremental_update')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "data_lake_param_container_level",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "adfrealtimestorage"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": null,
								"modifiedDatetimeEnd": null,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get_Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "data_lake_param_file_level",
											"type": "DatasetReference",
											"parameters": {
												"p_container_name": "adfrealtimestorage",
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get_Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(formatDateTime(activity('Get_Metadata1').output.lastModified,'yyyymmddHHmmss'),formatDateTime(variables('temporary_max_value'),'yyyymmddHHmmss'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set_temp_value",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "temporary_max_value",
													"value": {
														"value": "@activity('Get_Metadata1').output.lastModified",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set_max_value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@variables('max_value')",
										"type": "Expression"
									},
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "data_lake_param_container_level",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "adfrealtimestorage"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "data_lake_param_container_level",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "adfrealtimestoragedestination"
								}
							}
						]
					},
					{
						"name": "Set_max_value",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "max_value",
							"value": {
								"value": "@variables('temporary_max_value')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"temporary_max_value": {
						"type": "String",
						"defaultValue": "2000-01-01T00:00:00Z"
					},
					"max_value": {
						"type": "String",
						"defaultValue": "2000-01-01T00:00:00Z"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/data_lake_param_container_level')]",
				"[concat(variables('factoryId'), '/datasets/data_lake_param_file_level')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deletefiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "data_lake_param_container_level",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "adfrealtimestoragedestination"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get Metadata2').output.lastModified,addDays(utcNow(),pipeline().parameters.p_last_7_days))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Delete1",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "data_lake_param_file_level",
														"type": "DatasetReference",
														"parameters": {
															"p_container_name": "adfrealtimestoragedestination",
															"p_file_name": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "Linkservicedatalake",
															"type": "LinkedServiceReference"
														}
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"modifiedDatetimeStart": null,
														"modifiedDatetimeEnd": null,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								},
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "data_lake_param_container_level",
											"type": "DatasetReference",
											"parameters": {
												"p_container": {
													"value": "adfrealtimestoragedestination",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_last_7_days": {
						"type": "int",
						"defaultValue": -7
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/data_lake_param_container_level')]",
				"[concat(variables('factoryId'), '/datasets/data_lake_param_file_level')]",
				"[concat(variables('factoryId'), '/linkedServices/Linkservicedatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/freshfiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "data_lake_param_container_level",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "adfrealtimestorage"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@adddays(utcNow(),-1)",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/data_lake_param_container_level')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sale_test_job')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy sale data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Sale_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sale_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy sale data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Sale_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-28T08:28:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Sale_csv')]",
				"[concat(variables('factoryId'), '/datasets/Sale_target')]"
			]
		}
	]
}